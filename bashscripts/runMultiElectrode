#!/bin/bash
# Job submission script Format
s=('#!/bin/bash' \
'#SBATCH -n 40' \
'#SBATCH --job-name=' \
'#SBATCH --output=' \
'#SBATCH --mail-type=ALL' \
'#SBATCH --mail-user=carp.simulation@gmail.com')

hold=()
vtx_loc="/scratch/aowus003/Cardiac_Simulations/TestSim/CinC/TissueNew_Cinc/TbunnySim/TBunnyC_run/HeartRythm/SinusRythm/LQT2/LQT2parFIle/carputilsLQT2/TestPrepace/newRunsLQT2/cv_purkinje/sbatchRun/runS1S2"
vtx_f="${1:-LeftMultiple_two}"
nF=1; #Determine the number of sinus beats before ectopic beat
parFile="${2:-paramMultiElectrode.par}" # Primary parameter file


sVal=50; # Ectopy strength
His=1000; # His period
tend=2000;
#tend=`echo "${nF} ${His}" | awk '{print($1 * $2)}'`;
His_t=1; # Time to start sinus beat
#His_n=$(( "$tend/$His" ))
His_n="${nF}"
Rpmj="45e3"

#============================================
# Selection the type of simulation
#===============================================
simFlag="${3:-0}" # 1 for Ctrl and 0 for LQT2
fName="Ctrl"
gKr="${simFlag}"
mGNa=0.7; # Myocardial GNa
pGNa=0.95; # Purkinje GNa
gm=0.3; # Scaling factor for myocardial conductivity

if [[ "${simFlag}" -eq 0 ]]; then
    fName="LQT2"

fi

#========================================================
# save State Names
#=======================================================
str=""
savF=1; #Flag to save State
uFile="UCLA_RAB_${fName}_${His}_GNa_${mGNa}.sv"
aFile="ARPF_${fName}_${His}_GNa_${pGNa}.sv"

if [[ "${savF}" -eq 1 ]]; then
    str+=" -imp_region[0].im_sv_init      ${vtx_loc}/UCLA_RAB/${uFile}"
    str+=" -PurkIon[0].im_sv_init         ${vtx_loc}/ARPF/${aFile}"
fi

#=========================================================
# Use for the application of Ectopy
#========================================================
numS=1;
stimFlag="${4:-1}" # 0 for no ectopy and 1 for ectopy
if [[ "${stimFlag}" -eq 0 ]]; then
	vtx_f="noEctopy"
	numS=0;
else
	parFile="paramEctopy.par"
fi

# Mass lumping flag
m_lump="${5:-0}" # 0 for full matrix & 1 for lump Matrix


for S2 in $(seq 200 5 330); do
#for S2 in 0; do

	if [[ "${stimFlag}" -eq 1 ]]; then
		if [[ "${nF}" -ne 0 ]]; then 
			tS2=`echo "${His_t} ${nF} ${His} ${S2}" | awk '{print ($1 + ($2-1)*$3 + $4)}'`;
		else
			tS2="${His_t}";
		fi
	else
		tS2=0;
	fi

	file="${fName}-His-${His}-GM-${gm}-S1S2-${S2}-Stim-${sVal}-Rpmj-${Rpmj}-mGNa-${mGNa}-pGNa-${pGNa}-vtx-${vtx_f}-savF-${savF}.sh";
	hold+=("${file}")
	noSh="${file::-3}"; # Remove .sh from filename
	if [[ ! -e "${file}" ]]; then
		echo "${s[0]}" >> "${file}"
		echo "${s[1]}" >> "${file}"
		echo "${s[2]}${noSh} "  >> "${file}"
		echo "${s[3]}${noSh}.out "  >>"${file}"
		echo "${s[4]}" >>"${file}"
		echo "${s[5]}" >>"${file}"

		# Add carpentry instructions
		echo "" >> "${file}"
		echo "" >> "${file}"
		echo "module load container_env carpentry" \
		>>"${file}"
		echo "" >> "${file}"
		cmd="srun crun.carpentry carp.pt +F ${parFile}"
		cmd+=" -simID ${noSh}"
		cmd+=" -vofile ${noSh}"
		cmd+=" -phie_recovery_file ${noSh}_ECG"

		#===========================================================
		# Myocardium Stimulation
		#===========================================================
		cmd+=" -imp_region[0].im_param  gKr*${gKr},gNa*${mGNa}"
		cmd+=" -gregion[0].g_mult ${gm}" # Reduce conductivity


		#==============================================================
		# Purkinje Ectopy
		#=============================================================
		if [[ "${stimFlag}" -eq 1 ]]; then
			cmd+=" -num_stim ${numS}"
			cmd+=" -stimulus[0].start ${tS2}"
			cmd+=" -stimulus[0].domain 2"
		    cmd+=" -stimulus[0].vtx_file ${vtx_loc}/${vtx_f}"
			cmd+=" -stimulus[0].strength ${sVal}"
		fi

		#==================================================
		# Add start State
		#==================================================
		cmd+="${str}"

		#========================================================
		# Purkinje Stimulation
		#=======================================================
		cmd+=" -PurkIon[0].im_param  g_Kr*${gKr},g_Na*${pGNa}"
		cmd+=" -His_period ${His}"
		cmd+=" -His_n ${His_n}"
		cmd+=" -His_time ${His_t}"
		cmd+=" -Rpmj  ${Rpmj}"
		cmd+=" -mass_lumping ${m_lump}"

		# Start Simulations
		#cmd+=" -start_statef ${writeF}/100%_Sinus_IKr_blk.5000.0"
		cmd+=" -spacedt  3"
		cmd+=" -tend ${tend}"

		# Write carp command to  jobfile
		echo "${cmd}" >> "${file}"
	else
		echo "I didn't run ${file} "
	fi
done



	# Once you have all .sh files have been created.
	# Submit all jobs
for k in "${hold[@]}"; do
	/scratch/aowus003/Cardiac_Simulations/TestSim/shellScripts/general_sub_rev "${k}"
done
